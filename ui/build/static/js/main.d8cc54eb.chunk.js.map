{"version":3,"sources":["components/logo.svg","components/EntryForm.js","components/DisplayResults.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","EntryForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","result","callback","startDate","endDate","focusedInput","flyFrom","flyTo","handleInputChange","bind","assertThisInitialized","event","console","log","preventDefault","dtFrom","Date","toISOString","substring","dtTo","data","dateFrom","dateTo","exclusions","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","response","json","target","name","value","setState","defineProperty","_this2","react_default","a","createElement","onSubmit","e","handleSubmit","className","type","onChange","react_dates","startDateId","endDateId","onDatesChange","_ref","onFocusChange","React","Component","DisplayResults","map","flights","border","flight","FlyFrom","FlyTo","Price","DepartTimeUTC","ArrivalTimeUTC","Airline","App","handleChange","output","components_EntryForm","v","components_DisplayResults","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8cc54eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { DateRangePicker, DateRangePickerInputController } from \"react-dates\";\n\nclass EntryForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result: props.result,\n      callback: props.callback,\n      startDate: null,\n      endDate: null,\n      focusedInput: null,\n      flyFrom: \"JFK\",\n      flyTo: \"CTG\"\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async handleSubmit(event) {\n    console.log(\"form submit\");\n    event.preventDefault();\n\n    let dtFrom = new Date(this.state.startDate).toISOString().substring(0, 10);\n    let dtTo = new Date(this.state.endDate).toISOString().substring(0, 10);\n\n    let data = {\n      flyFrom: this.state.flyFrom,\n      flyTo: this.state.flyTo,\n      dateFrom: dtFrom,\n      dateTo: dtTo,\n      exclusions: this.state.exclusions\n    };\n\n    console.log(data);\n\n    const response = await fetch(\"http://www.daveisenberg.com/recos\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n\n    const json = await response.json();\n\n    console.log(json);\n\n    this.props.callback(json);\n  }\n\n  handleInputChange(event) {\n    console.log([event.target.name] + \":\" + event.target.value);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={e => this.handleSubmit(e)}>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Start </th>\n              <th>Destination </th>\n              <th>Dates</th>\n              <th>Exclusions</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"flyFrom\"\n                  value={this.state.flyFrom}\n                  onChange={this.handleInputChange}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"flyTo\"\n                  value={this.state.flyTo}\n                  onChange={this.handleInputChange}\n                />\n              </td>\n              <td>\n                <DateRangePicker\n                  startDate={this.state.startDate} // momentPropTypes.momentObj or null,\n                  startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n                  endDate={this.state.endDate} // momentPropTypes.momentObj or null,\n                  endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n                  onDatesChange={({ startDate, endDate }) =>\n                    this.setState({ startDate, endDate })\n                  } // PropTypes.func.isRequired,\n                  focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n                  onFocusChange={focusedInput =>\n                    this.setState({ focusedInput })\n                  } // PropT\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"exclusions\"\n                  value={this.state.exclusions}\n                  onChange={this.handleInputChange}\n                />\n              </td>\n              <td>\n                <input type=\"submit\" name=\"submit\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </form>\n    );\n  }\n}\n\nexport default EntryForm;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass DisplayResults extends React.Component {\n  render() {\n    console.log(\"what is this: \" + this.props.result);\n    if (!this.props.result) return <p>Loading</p>;\n\n    return (\n      <div>\n        {this.props.result.map(flights =>\n          flights === null ? (\n            \"\"\n          ) : (\n            <table border=\"1\">\n              <tbody>\n                {flights.map(flight =>\n                  flight === null ? (\n                    \"\"\n                  ) : (\n                    <tr>\n                      <td> {flight.FlyFrom}</td>\n                      <td> {flight.FlyTo} </td>\n                      <td> ${flight.Price} </td>\n                      <td> {flight.DepartTimeUTC} </td>\n                      <td> {flight.ArrivalTimeUTC} </td>\n                      <td> {flight.Airline} </td>\n                    </tr>\n                  )\n                )}\n              </tbody>\n            </table>\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DisplayResults;\n\n/*\n\n      <table>\n        <tbody>\n          {this.props.result.map(flight, key => (\n            <tr>\n              <td> {flight.flyFrom}</td>\n              <td> {flight.flyTo} </td>\n              <td> {flight.Price} </td>\n              <td> {flight.DepartTimeUTC} </td>\n              <td> {flight.ArrivalTimeUTC} </td>\n              <td> {flight.Airline} </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      */\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport EntryForm from \"./EntryForm\";\nimport DisplayResults from \"./DisplayResults\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: null,\n      onChange: this.handleChange\n    };\n  }\n\n  handleChange(output) {\n    console.log(\"here\");\n    console.log(output);\n    this.setState({ result: output });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <EntryForm\n          result={this.state.result}\n          callback={v => this.handleChange(v)}\n        />\n        <DisplayResults result={this.state.result} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n result: [\n        {\n          flyFrom: \"NYC\",\n          flyTo: \"ABC\",\n          price: 0.0,\n          airline: null,\n          duration: null,\n          arrivalTimeUTC: \"0001-01-01T00:00:00\",\n          departTimeUTC: \"0001-01-01T00:00:00\",\n          flightNum: null\n        },\n        {\n          flyFrom: \"ABC\",\n          flyTo: \"NYC\",\n          price: 0.0,\n          airline: null,\n          duration: null,\n          arrivalTimeUTC: \"0001-01-01T00:00:00\",\n          departTimeUTC: \"0001-01-01T00:00:00\",\n          flightNum: null\n        }\n      ],\n      */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n//import { \"bootstrap/dist/css/bootstrap.min.css\"}\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}